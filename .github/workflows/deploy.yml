name: Deploy

on:
    push:
        branches:
            - master
            
permissions:
    contents: write
        
jobs:
    build:
        runs-on: windows-latest
        
        steps:
            - name: Checkout
              uses: actions/checkout@v3
              
            - name: Setup .NET
              uses: actions/setup-dotnet@v3
              with:
                dotnet-version: 8.0.x
                
            - name: Install MAUI Workload
              run: dotnet workload install maui
              
            - name: Restore
              run: dotnet restore
              working-directory: ./protex.hr
            
            - name: Build
              run: dotnet build -c Release -f:net8.0-windows10.0.19041.0
              working-directory: ./protex.hr
              
            - name: Decode Signing Certificate
              run: |
                echo "${{ secrets.SIGNING_CERTIFICATE_BASE_64_CONTENT }}" > cert.asc
                certutil -decode cert.asc cert.pfx
              
            - name: Install Signing Certificate
              run: certutil -user -p ${{ secrets.SIGNING_CERTIFICATE_PASSWORD }} -Silent -importpfx cert.pfx NoRoot
              
            - name: Publish
              run: dotnet publish -c Release -f:net8.0-windows10.0.19041.0 /p:GenerateAppxPackageOnBuild=true /p:AppxPackageSigningEnabled=true /p:PackageCertificateThumbprint=${{ secrets.SIGNING_CERTIFICATE_THUMBPRINT }}
              working-directory: ./protex.hr
              
            - name: Extract Version
              id: extractVersion
              shell: pwsh
              run: |
                $xml = [Xml] (Get-Content ./protex.hr/protexhr.app.csproj)
                $version = $xml.Project.PropertyGroup.ApplicationDisplayVersion | Select-Object -First 1
                echo "version=$($version)" >> $env:GITHUB_OUTPUT
                
            - name: Create Tag
              uses: actions/github-script@v5
              with:
                github-token: ${{ secrets.GITHUB_TOKEN }}
                script: |
                    github.rest.git.createRef({
                        owner: context.repo.owner,
                        repo: context.repo.repo,
                        sha: context.sha,
                        ref: 'refs/tag/v${{ steps.extractVersion.outputs.version }}'
                    })
            
            - name: Rename Auto-Update Installer
              shell: pwsh
              run: Rename-Item ./protex.hr/bin/Release/net8.0-windows10.0.19041.0/win10-x64/AppPackages/protexhr.app_${{ steps.extractVersion.outputs.version }}.0_Test/protexhr.app_${{ steps.extractVersion.outputs.version }}.0_x64.msix AutoUpdate.msix
            
            - name: Rename Certificate
              shell: pwsh
              run: Rename-Item ./protex.hr/bin/Release/net8.0-windows10.0.19041.0/win10-x64/AppPackages/protexhr.app_${{ steps.extractVersion.outputs.version }}.0_Test/protexhr.app_${{ steps.extractVersion.outputs.version }}.0_x64.cer ProtexHR.cer

            
            #- name: Upload
            #  uses: actions/upload-artifact@v4 
            #  with:
            #    name: Build
            #    path: | 
            #        ./protex.hr/bin/Release/net8.0-windows10.0.19041.0/win10-x64/AppPackages/**/*.msix
            #        ./protex.hr/bin/Release/net8.0-windows10.0.19041.0/win10-x64/AppPackages/**/*.cer
            
            - name: Create Release
              uses: softprops/action-gh-release@v1
              with:
                tag_name: v${{ steps.extractVersion.outputs.version }}
                files: |
                    ./protex.hr/ProtexHR.appinstaller
                    ./protex.hr/bin/Release/net8.0-windows10.0.19041.0/win10-x64/AppPackages/protexhr.app_${{ steps.extractVersion.outputs.version }}.0_Test/AutoUpdate.msix
                    ./protex.hr/bin/Release/net8.0-windows10.0.19041.0/win10-x64/AppPackages/protexhr.app_${{ steps.extractVersion.outputs.version }}.0_Test/ProtexHR.cer
                    
                    
            